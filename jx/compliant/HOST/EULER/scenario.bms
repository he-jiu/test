#piece#equipment_type=HOST_EULER
#piece##equipment_name#
hostname
#piece##equipment_name#
#piece##equipment_ip#
ifconfig
#piece##equipment_ip#

#piece#cm_item_code=#%SEC-CI-HT-634#%
#piece#cm_item_code=#%SEC-CI-HT-624#%
#piece#cm_item_code=#%SEC-CI-HT-601#%
#piece#cm_item_code=#%SEC-CI-HT-611#%
#piece#cm_item_code=#%SEC-CI-HT-614#%
#piece#cm_item_code=#%SEC-CI-HT-613#%
#piece#cm_item_code=#%SEC-CI-HT-616#%
#piece#cm_item_code=#%SEC-CI-HT-628#%
#piece#cm_item_code=#%SEC-CI-HT-630#%
#piece#cm_item_code=#%SEC-CI-HT-638#%SEC-CI-HT-627#%SEC-CI-HT-623#%
#piece#cm_item_code=#%SEC-CI-HT-633#%
#piece#cm_item_code=#%SEC-CI-HT-617#%
#piece#cm_item_code=#%SEC-CI-HT-604#%
#piece#cm_item_code=#%SEC-CI-HT-606#%
#piece#cm_item_code=#%SEC-CI-HT-625#%
#piece#cm_item_code=#%SEC-CI-HT-636#%
#piece#cm_item_code=#%SEC-CI-HT-602#%
#piece#cm_item_code=#%SEC-CI-HT-637#%
#piece#cm_item_code=#%SEC-CI-HT-629#%
#piece#cm_item_code=#%SEC-CI-HT-641#%
#piece#cm_item_code=#%SEC-CI-HT-622#%SEC-CI-HT-620#%SEC-CI-HT-653#%SEC-CI-HT-646#%SEC-CI-HT-661#%SEC-CI-HT-659#%SEC-CI-HT-618#%
#piece#cm_item_code=#%SEC-CI-HT-605#%SEC-CI-HT-655#%
#piece#cm_item_code=#%SEC-CI-HT-635#%
#piece#cm_item_code=#%SEC-CI-HT-603#%
#piece#cm_item_code=#%SEC-CI-HT-642#%
#piece#cm_item_code=#%SEC-CI-HT-608#%
#piece#cm_item_code=#%SEC-CI-HT-619#%
#piece#cm_item_code=#%SEC-CI-HT-610#%
#piece#cm_item_code=#%SEC-CI-HT-631#%
#piece#cm_item_code=#%SEC-CI-HT-644#%
#piece#cm_item_code=#%SEC-CI-HT-645#%
#piece#cm_item_code=#%SEC-CI-HT-626#%
#piece#cm_item_code=#%SEC-CI-HT-647#%
#piece#cm_item_code=#%SEC-CI-HT-648#%
#piece#cm_item_code=#%SEC-CI-HT-615#%
#piece#cm_item_code=#%SEC-CI-HT-649#%
#piece#cm_item_code=#%SEC-CI-HT-650#%
#piece#cm_item_code=#%SEC-CI-HT-651#%
#piece#cm_item_code=#%SEC-CI-HT-621#%
#piece#cm_item_code=#%SEC-CI-HT-652#%
#piece#cm_item_code=#%SEC-CI-HT-643#%
#piece#cm_item_code=#%SEC-CI-HT-656#%
#piece#cm_item_code=#%SEC-CI-HT-660#%
#piece#cm_item_code=#%SEC-CI-HT-612#%
#piece#cm_item_code=#%SEC-CI-HT-609#%
#piece#cm_item_code=#%SEC-CI-HT-654#%
#piece#cm_item_code=#%SEC-CI-HT-657#%
#piece#cm_item_code=#%SEC-CI-HT-658#%
#piece#cm_item_code=#%SEC-CI-HT-639#%
#piece#cm_item_code=#%SEC-CI-HT-607#%
#piece##%SEC-CI-HT-636#%
#!/bin/bash
function vsftp_dir {
rpm -q vsftpd|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q vsftpd|grep -v 'is not installed\|未安装软件包'|wc -l)
FTPCONF="$(ps -ef |awk '/vsftpd \//{print $NF}')";
if [[ ! -f ${FTPCONF:="/etc/vsftpd/vsftpd.conf"} ]];
    then FTPCONF="/etc/vsftpd.conf";   
fi
if [[ $is_installed -eq 0 ]]; then
  echo "vsftpd server is not installed, result=true"
elif [[ -f $FTPCONF ]]; then
  sudo cat $FTPCONF|egrep -v "^#|^$"
  if [[ `sudo cat $FTPCONF|grep -v "^#" |grep -i "chroot_local_user=YES"|wc -l` -eq 1 ]];
     then  echo "vsftpd is running.$FTPCONF is recommended.FTP check result=true.";
     else  echo "vsftpd is running.$FTPCONF is not recommended.FTP check result=false.";
  fi;
  unset FTPCONF;
else
  echo "vsftpd server is installed, but vsftpd.conf is not exist, result=false"
fi
}

function pureftp_dir {
rpm -q 'pure-ftpd'|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q 'pure-ftpd'|grep -v 'is not installed\|未安装软件包'|wc -l)
if [[ $is_installed -eq 0 ]]; then
  echo "pure-ftpd server is not installed, result=true"
elif [[ -f /etc/pure-ftpd/pure-ftpd.conf ]]; then
  sudo cat /etc/pure-ftpd/pure-ftpd.conf|egrep -v "^#|^$"
  ChrootEveryone=`sudo cat /etc/pure-ftpd/pure-ftpd.conf|grep -v "^#"|grep -i "ChrootEveryone"|grep -i "yes"|wc -l`;
  AllowUserFXP=`sudo cat /etc/pure-ftpd/pure-ftpd.conf|grep -v "^#"|grep -i "AllowUserFXP"|grep -i "no"|wc -l`;
  AllowAnonymousFXP=`sudo cat /etc/pure-ftpd/pure-ftpd.conf|grep -v "^#"|grep -i "AllowAnonymousFXP"|grep -i "no"|wc -l`;
  PUREFTPD_NO=$(expr $ChrootEveryone + $AllowUserFXP + $AllowAnonymousFXP);
  if [[ $PUREFTPD_NO -eq 3 ]];
     then echo "pure-ftpd is running.pure-ftpd.conf is recommended.FTP check result=true.";
     else echo "pure-ftpd is running.pure-ftpd.conf is not recommended.FTP check result=false.";
  fi;
  unset ChrootEveryone AllowUserFXP AllowAnonymousFXP PUREFTPD_NO;
else
  echo "pure-ftpd server is installed, but pure-ftpd.conf is not exist, result=false"
fi
}
vsftp_dir;pureftp_dir;unset vsftp_dir pureftp_dir

#piece##%SEC-CI-HT-636#%

#piece##%SEC-CI-HT-617#%
#!/bin/bash
up_uidmin=`(grep -v ^# /etc/login.defs |grep "^UID_MIN"|awk '($1="UID_MIN"){print $2}')`
up_uidmax=`(grep -v ^# /etc/login.defs |grep "^UID_MAX"|awk '($1="UID_MAX"){print $2}')`
egrep -v "oracle|sybase|postgres" /etc/passwd|awk -F: '($3>='$up_uidmin' && $3<='$up_uidmax') {print $1":"$3}'
echo "result="`egrep -v "oracle|sybase|postgres" /etc/passwd|awk -F: '($3>='$up_uidmin' && $3<='$up_uidmax') {print $1":"$3}'|wc -l`

#piece##%SEC-CI-HT-617#%

#piece##%SEC-CI-HT-611#%
ls -l /etc/passwd | awk '{print $1":"$NF}'
ls -l /etc/group | awk '{print $1":"$NF}'
ls -l /etc/shadow | awk '{print $1":"$NF}'
#piece##%SEC-CI-HT-611#%

#piece##%SEC-CI-HT-614#%
cat /etc/pam.d/system-auth | grep remember
#piece##%SEC-CI-HT-614#%

#piece##%SEC-CI-HT-613#%
#/bin/bash
function chk_umask {
  egrep -v '^#|^$' /etc/profile|grep -i "umask"|tail -1
  echo "umask="$(umask 2>/dev/null)
  echo "LOGIN_"$(cat /etc/login.defs|grep -v '^#'|grep -i umask)
}
chk_umask;unset profileUMASK chk_umask
#piece##%SEC-CI-HT-613#%

#piece##%SEC-CI-HT-616#%
function min_class {
  DCREDIT=`cat $1|grep -v "#"|grep -m 1 -w "dcredit"|sed 's/^.*dcredit\s*=\s*//g'|sed 's/\s.*$//g'`
  LCREDIT=`cat $1|grep -v "#"|grep -m 1 -w "lcredit"|sed 's/^.*lcredit\s*=\s*//g'|sed 's/\s.*$//g'`
  UCREDIT=`cat $1|grep -v "#"|grep -m 1 -w "ucredit"|sed 's/^.*ucredit\s*=\s*//g'|sed 's/\s.*$//g'`
  OCREDIT=`cat $1|grep -v "#"|grep -m 1 -w "ocredit"|sed 's/^.*ocredit\s*=\s*//g'|sed 's/\s.*$//g'`
  MINCLASS=`cat $1|grep -v "#"|grep -m 1 -w "minclass"|sed 's/^.*minclass\s*=\s*//g'|sed 's/\s.*$//g'`
  MINLEN=`cat $1|grep -v "#"|grep -m 1 "minlen"|sed 's/^.*minlen\s*=\s*//g'|sed 's/\s.*$//g'`
  COUNT2=0
  for NO in $DCREDIT $LCREDIT $UCREDIT $OCREDIT
  do
     if ([ $NO -lt 0 ]);
     then COUNT2=`expr $COUNT2 + 1`
     fi
  done
  [ ${MINCLASS:=0} -ge 3 -o $COUNT2 -ge 3 ] && MINCLASS=4
}
function _printer {
if [ ${MINCLASS:=0} -lt 4 -o ${MINLEN:=0} -lt 8  ];then
  if [ -f $1 ];then
    min_class $1
    if [ ${MINCLASS:=0} -lt 4 -o ${MINLEN:=0} -lt 8  ];then
      echo $1" MINCLASS="${MINCLASS:=0}", check result:false"
    else
      echo $1" MINCLASS="${MINCLASS:=0}", check result:true"
    fi
  fi
else
  echo "/etc/security/pwquality.conf MINCLASS="${MINCLASS:=0}", check result:true"
fi
[ -f $1 ] && pwd_other $1
}

function pwd_other {
  ENFORCE=`cat $1|grep -v '#'|grep enforce_for_root|wc -l`
  if [ ${ENFORCE:=0} -ne 0 ];then echo echo $1" ENFORCE="${ENFORCE:=0}", check result:true"
  else echo $1" ENFORCE="${ENFORCE:=0}", check result:false"
  fi
}

function Calculate {
  [ -f /etc/security/pwquality.conf ] && min_class /etc/security/pwquality.conf
  _printer /etc/pam.d/system-auth
   unset CREDIT DCREDIT LCREDIT UCREDIT OCREDIT MINCLASS MINLEN COUNT2 ENFORCE
}
Calculate;unset min_class pwd_other _printer Calculate

#piece##%SEC-CI-HT-616#%

#piece##%SEC-CI-HT-628#%
#!/bin/bash
function root_login_deny {
SSHSTATUS=`ps -ef|grep -i sshd|grep -v grep|wc -l`
if [ x"$SSHSTATUS" != "x0" ];
then  if [[ `cat /etc/ssh/sshd_config|grep "^PermitRootLogin" |awk '{print $2}'|grep -iw "no"|wc -l` != 0 ]];
      then  cat /etc/ssh/sshd_config|grep "^PermitRootLogin";
            echo "This device does not permit root to ssh login,check result:true";
      else  echo "This device permits root to ssh login,check result:false" ;
      fi
else  echo "The ssh service of device is not running,check result:true";
fi;unset SSHSTATUS
if [ "$(which netstat 2>/dev/null)"x != ""x ];then
  TELSTATUS=`netstat -tlnp|awk '$4~/:23$/{print $0}'|wc -l`
else [ "$(which ss 2>/dev/null)"x != ""x ] && TELSTATUS=`ss -tlnp|awk '$4~/:23$/{print $0}'|wc -l`;fi
if [ x"${TELSTATUS:=0}" != "x0" ];then
  if ([ -f /etc/securetty ] && [ "x$(grep ^pts /etc/securetty|wc -l)" = "x0" ]);then
    echo "This device does not permit root to telnet login,check result:true";
  else
    echo "This device permits root to telnet login,check result:false";fi
else  echo "The telnet service of device is not running,check result:true";
fi;unset TELSTATUS
}
root_login_deny;unset root_login_deny

#piece##%SEC-CI-HT-628#%

#piece##%SEC-CI-HT-602#%
cat /etc/profile |sed '/^#/d'|sed '/^$/d'|grep -i TMOUT
cat /etc/csh.cshrc |sed '/^#/d'|sed '/^$/d'|grep -i autologout
#piece##%SEC-CI-HT-602#%

#piece##%SEC-CI-HT-637#%
cat /etc/login.defs |sed '/^#/d'|sed '/^$/d'
#piece##%SEC-CI-HT-637#%

#piece##%SEC-CI-HT-630#%
#!/bin/bash
function chk_ssh {
LANG_BAK=$LANG;LANG=c
rpm -q telnet-server|grep -v 'is not installed'
is_installed=$(rpm -q telnet-server|grep -v 'is not installed'|wc -l)
if [ $is_installed -eq 0 ]; then
  [ "$(which netstat 2>/dev/null)"x != ""x ] && netstat -tlnp|grep -w sshd|awk 'END{if(NR!=0){print "  telnet-server is not installed, result=true"}else{print "openssh is not running, result=false"}}'
  [ "$(which ss 2>/dev/null)"x != ""x ] && ss -tlnp|grep -w sshd|awk 'END{if(NR!=0){print "telnet-server is not installed, result=true"}else{print "openssh is not running, result=false"}}'
else
  echo "telnet-server is installed, result=false"
fi
LANG=$LANG_BAK
}
chk_ssh;unset LANG_BAK chk_ssh
#piece##%SEC-CI-HT-630#%

#piece##%SEC-CI-HT-638#%SEC-CI-HT-627#%SEC-CI-HT-623#%
#!/bin/bash
if [ -s /etc/motd ];
then echo "/etc/motd is not null./etc/motd check result:true";
else echo "/etc/motd is null./etc/motd check result:false";
fi
if [ -s /etc/issue ];
then echo "/etc/issue is not null./etc/issue check result:true";
else echo "/etc/issue is null./etc/issue check result:false";
fi
if [ `netstat -antp|grep -i listen|grep ":22\>"|wc -l` != 0 ];
then SSHBANNER=`grep -v "^#" /etc/ssh/sshd_config|grep -i banner|awk '{print $2}'`;
     if [[ -n $SSHBANNER && -s $SSHBANNER ]];
         then echo "sshd is running.sshd banner is not null.sshd banner check result:true";
         else echo "sshd is running.sshd banner is null.sshd banner check result:false";
     fi;
else echo "sshd is not running.sshd banner check result:true";
fi
if [ `netstat -antp|grep -i listen|grep ":23\>"|wc -l` != 0 ];
then if [[ -s /etc/issue || -s /etc/issue.net ]];
        then echo "telnet is running.telnet banner is not null.telnet banner check result:true";
        else echo "telnet is running.telnet banner is null.telnet banner check result:false";
     fi;
else echo "telnet is not running.telnet banner check result:true";
fi

#piece##%SEC-CI-HT-638#%SEC-CI-HT-627#%SEC-CI-HT-623#%

#piece##%SEC-CI-HT-625#%
#!/bin/bash
if [ -f  /etc/syslog.conf ];then
      SYSLOGCONF=/etc/syslog.conf;
      LOGDIR=`cat $SYSLOGCONF |sed '/^#/d' |sed '/^$/d' |awk '(($2!~/@/) && ($2!~/*/) && ($2!~/-/)) {print $2}'`;
      ls -l $LOGDIR;
fi
if [ -f  /etc/rsyslog.conf ];then
      SYSLOGCONF=/etc/rsyslog.conf;
      LOGDIR=`cat $SYSLOGCONF |sed '/^#/d' |sed '/^$/d' |awk '(($2!~/@/) && ($2!~/*/) && ($2!~/-/)) {print $2}'`;
      ls -l $LOGDIR;
fi
if [ -f  /etc/syslog-ng/syslog-ng.conf ];then
      SYSLOGCONF=/etc/rsyslog.conf;
      LOGDIR=`cat /etc/syslog-ng/syslog-ng.conf|grep "^destination"|grep file|cut -d\" -f2`;
      ls -l $LOGDIR;
fi

#piece##%SEC-CI-HT-625#%

#piece##%SEC-CI-HT-633#%
#!/bin/bash
NUMBER=0;
for DIR in `cut -d":" -f6 /etc/passwd`;
        do if [ -e $DIR/.netrc ];then 
           echo "$DIR/.netrc";NUMBER=`expr $NUMBER + 1`;
           fi;
        done
if [ $NUMBER -gt 0 ];
        then echo "check result:false";
else
        echo "check result:true";
fi;
if [[ -e /etc/hosts.equiv || -e /root/.rhosts ]];
        then echo "check result:false";
else
        echo "check result:true";
fi;
unset NUMBER

#piece##%SEC-CI-HT-633#%

#piece##%SEC-CI-HT-629#%
#!/bin/bash
function vsftp_anonymous {
rpm -q vsftpd|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q vsftpd|grep -v 'is not installed\|未安装软件包'|wc -l)
FTPCONF="$(ps -ef |awk '/vsftpd \//{print $NF}')";
if [[ ! -f ${FTPCONF:="/etc/vsftpd/vsftpd.conf"} ]];
    then FTPCONF="/etc/vsftpd.conf";   
fi

if [[ $is_installed -eq 0 ]]; then
  echo "vsftpd server is not installed, result=true"
elif [[ -f $FTPCONF ]]; then
  grep '^anonymous_enable' $FTPCONF |awk -F= '{if($2=="NO"){print $0" ,result=true"}else{print $0" ,result=false"}}'
else
  echo "vsftpd server is installed, but vsftpd.conf is not exist, result=false"
fi
}

function pureftp_anonymous {
rpm -q 'pure-ftpd'|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q 'pure-ftpd'|grep -v 'is not installed\|未安装软件包'|wc -l)
if [[ $is_installed -eq 0 ]]; then
  echo "pure-ftpd server is not installed, result=true"
elif [[ -f /etc/pure-ftpd/pure-ftpd.conf ]]; then
  grep '^NoAnonymous' /etc/pure-ftpd/pure-ftpd.conf |awk '{if($2=="yes"){print $0" ,result=true"}else{print $0" ,result=false"}}'
else
  echo "pure-ftpd server is installed, but pure-ftpd.conf is not exist, result=false"
fi
}
vsftp_anonymous;pureftp_anonymous;unset vsftp_anonymous pureftp_anonymous

#piece##%SEC-CI-HT-629#%

#piece##%SEC-CI-HT-634#%
function list_sys_services {
  LANG_BAK=$LANG;LANG=C
  [ "$(which chkconfig 2>/dev/null)"x != ""x ] && chkconfig --list |egrep '^\bdiscard\b|^\bsendmail\b|^\bident\b|^\bprinter\b|^\bbootps\b|^\blpd\b|^\bnfs\b|^\bnfs.lock\b|^\bypbind\b|^\bdaytime\b|^\btime\b|^\becho\b|^\bchargen\b|^\bntalk\b|^\btftp\b|^\bamanda\b|^\bcups\b|^\bcups-lpd\b|^\beklogin\b|^\bekrb5-telnet\b|^\bfinger\b|^\bgssftp\b|^\bimap\b|^\bimaps\b|^\bipop2\b|^\bipop3\b|^\bklogin\b|^\bkrb5-telnet\b|^\bkshell\b|^\bktalk\b|^\brexec\b|^\brlogin\b|^\brsh\b|^\brsync\b|^\btalk\b|^\btcpmux-server\b|^\btelnet\b|^\buucp\b'|awk 'BEGIN{num=0} /:on/{num+=1;print $0}END{if(num>0){print "result=false"}else{print "result=true"}}'
  [ "$(which systemctl 2>/dev/null)"x != ""x ] && systemctl list-unit-files --type service --type socket|egrep '^\bdiscard\b|^\bsendmail\b|^\bident\b|^\bprinter\b|^\bbootps\b|^\blpd\b|^\bnfs\b|^\bnfs.lock\b|^\bypbind\b|^\bdaytime\b|^\btime\b|^\becho\b|^\bchargen\b|^\bntalk\b|^\btftp\b|^\bamanda\b|^\bcups\b|^\bcups-lpd\b|^\beklogin\b|^\bekrb5-telnet\b|^\bfinger\b|^\bgssftp\b|^\bimap\b|^\bimaps\b|^\bipop2\b|^\bipop3\b|^\bklogin\b|^\bkrb5-telnet\b|^\bkshell\b|^\bktalk\b|^\brexec\b|^\brlogin\b|^\brsh\b|^\brsync\b|^\btalk\b|^\btcpmux-server\b|^\btelnet\b|^\buucp\b'|awk 'BEGIN{num=0} /enabled/{num+=1;print $0}END{if(num>0){print "result=false"}else{print "result=true"}}'
  if [ "$(which netstat 2>/dev/null)"x != ""x ];then
    netstat -anp|egrep '^tcp|^udp' |awk 'BEGIN{num=0} /:(139|445)\s+/{num+=1;print $0}END{if(num>0){print "result=false"}else{print "result=true"}}'
  else
    [ "$(which ss 2>/dev/null)"x != ""x ] && ss -tlnp |awk 'BEGIN{num=0} /:(139|445)\s+/{num+=1;print $0}END{if(num>0){print "result=false"}else{print "result=true"}}'
  fi
  LANG=$LANG_BAK
}
list_sys_services;unset LANG_BAK list_sys_services
#piece##%SEC-CI-HT-634#%

#piece##%SEC-CI-HT-606#%
#!/bin/bash
UP_GIDMIN=`(grep -v ^# /etc/login.defs |grep "^GID_MIN"|awk '($1="GID_MIN") {print $2}')`
UP_GIDMAX=`(grep -v ^# /etc/login.defs |grep "^GID_MAX"|awk '($1="GID_MAX") {print $2}')`
egrep -v "oracle|sybase|postgres" /etc/passwd|awk -F: '($4>='$UP_GIDMIN' && $4<='$UP_GIDMAX') {print $1":"$3":"$4}'
echo $UP_GIDMIN $UP_GIDMAX
echo "result="`egrep -v "oracle|sybase|postgres" /etc/passwd|awk -F: '($4>='$UP_GIDMIN' && $4<='$UP_GIDMAX') {print $1":"$3":"$4}'|wc -l`
unset UP_GIDMIN UP_GIDMAX

#piece##%SEC-CI-HT-606#%

#piece##%SEC-CI-HT-604#%
cat /etc/shadow |egrep -w "^lp|^mailnull|^man|^mysql|^named|^news|^nscd|^ntp|^operator|^pcap|^pop|^postfix|^postgres|^rpc|^rpcuser|^sabayon|^snort|^squid|^xfs|^nobody|^uucp|^games|^rpm|^smmsp" |awk -F: '{print $1":"$2}'| egrep -v "\!|\*"
cat /etc/shadow |egrep -w "^nfsnobody|^listen|^gdm|^webservd|^nobody4|^noaccess|^adm|^apache|^at|^avahi|^bin|^daemon|^dbus|^distcache|^ftp|^gopher|^haldaemon|^irc|^ldap|^mail|^wwwrun|^webalizer|^vcsa" |awk -F: '{print $1":"$2}'| egrep -v "\!|\*"
echo "result0="`cat /etc/shadow |egrep -w "^lp|^mailnull|^man|^mysql|^named|^news|^nscd|^ntp|^operator|^pcap|^pop|^postfix|^postgres|^rpc|^rpcuser|^sabayon|^snort|^squid|^xfs|^nobody|^uucp|^games|^rpm|^smmsp" |awk -F: '{print $1":"$2}'| egrep -v "\!|\*"|wc -l`
echo "result1="`cat /etc/shadow |egrep -w "^nfsnobody|^listen|^gdm|^webservd|^nobody4|^noaccess|^adm|^apache|^at|^avahi|^bin|^daemon|^dbus|^distcache|^ftp|^gopher|^haldaemon|^irc|^ldap|^mail|^wwwrun|^webalizer|^vcsa" |awk -F: '{print $1":"$2}'| egrep -v "\!|\*"|wc -l`
cat /etc/passwd |egrep -w "^lp|^mailnull|^man|^mysql|^named|^news|^nscd|^ntp|^operator|^pcap|^pop|^postfix|^postgres|^rpc|^rpcuser|^sabayon|^snort|^squid|^xfs|^nobody|^uucp|^games|^rpm|^smmsp" |awk -F: '($7!~"/bin/false|/sbin/nologin") {print $1":"$7}'
cat /etc/passwd |egrep -w "^nfsnobody|^listen|^gdm|^webservd|^nobody4|^noaccess|^adm|^apache|^at|^avahi|^bin|^daemon|^dbus|^distcache|^ftp|^gopher|^haldaemon|^irc|^ldap|^mail|^wwwrun|^webalizer|^vcsa" |awk -F: '($7!~"/bin/false|/sbin/nologin") {print $1":"$7}'
echo "result2="`cat /etc/passwd |egrep -w "^lp|^mailnull|^man|^mysql|^named|^news|^nscd|^ntp|^operator|^pcap|^pop|^postfix|^postgres|^rpc|^rpcuser|^sabayon|^snort|^squid|^xfs|^nobody|^uucp|^games|^rpm|^smmsp" |awk -F: '($7!~"/bin/false|/sbin/nologin") {print $1":"$7}'|wc -l`
echo "result3="`cat /etc/passwd |egrep -w "^nfsnobody|^listen|^gdm|^webservd|^nobody4|^noaccess|^adm|^apache|^at|^avahi|^bin|^daemon|^dbus|^distcache|^ftp|^gopher|^haldaemon|^irc|^ldap|^mail|^wwwrun|^webalizer|^vcsa" |awk -F: '($7!~"/bin/false|/sbin/nologin") {print $1":"$7}'|wc -l`
#piece##%SEC-CI-HT-604#%

#piece##%SEC-CI-HT-641#%
ls /etc/rc2.d/* /etc/rc3.d/* /etc/rc4.d/* /etc/rc5.d/*|egrep "lp\b|rpc\b|snmpdx\b|keyserv\b|nscd\b|Volmgt\b|uucp\b|dmi\b|sendmail\b|autoinstall\b"|grep "^S"
echo "result="`ls /etc/rc2.d/* /etc/rc3.d/* /etc/rc4.d/* /etc/rc5.d/*|egrep "lp\b|rpc\b|snmpdx\b|keyserv\b|nscd\b|Volmgt\b|uucp\b|dmi\b|sendmail\b|autoinstall\b"|grep "^S"|wc -l`
ls /etc/rc2.d/* /etc/rc3.d/* /etc/rc4.d/* /etc/rc5.d/*|egrep "lp\b|rpc\b|snmpdx\b|keyserv\b|nscd\b|Volmgt\b|uucp\b|dmi\b|sendmail\b|autoinstall\b"|awk -F/ '{print $NF}'|grep "^S"
echo "result="`ls /etc/rc2.d/* /etc/rc3.d/* /etc/rc4.d/* /etc/rc5.d/*|egrep "lp\b|rpc\b|snmpdx\b|keyserv\b|nscd\b|Volmgt\b|uucp\b|dmi\b|sendmail\b|autoinstall\b"|awk -F/ '{print $NF}'|grep "^S"|wc -l`
#piece##%SEC-CI-HT-641#%

#piece##%SEC-CI-HT-622#%SEC-CI-HT-620#%SEC-CI-HT-653#%SEC-CI-HT-646#%SEC-CI-HT-661#%SEC-CI-HT-659#%SEC-CI-HT-618#%
cat /etc/sysctl.conf | grep -v '^#'| grep -v '^$'
echo "accept_redirects="`(sysctl -n net.ipv4.conf.all.accept_redirects)`
echo "accept_source_route"=`(sysctl -n net.ipv4.conf.all.accept_source_route)`
echo "IP_Forward"=`(sysctl -n net.ipv4.ip_forward)`
echo "All_Forwarding"=`(sysctl -n net.ipv4.conf.all.forwarding)`
echo "Default_Forwarding"=`(sysctl -n net.ipv4.conf.default.forwarding)`
echo "Icmp_Echo_Ignore_Broadcasts"=`(sysctl -n net.ipv4.icmp_echo_ignore_broadcasts)`
echo "Icmp_Ignore_Bogus_Error_Responses"=`(sysctl -n net.ipv4.icmp_ignore_bogus_error_responses)`
echo "All_Rp_Filter"=`(sysctl -n net.ipv4.conf.all.rp_filter)`
echo "Default.Rp_Filter"=`(sysctl -n net.ipv4.conf.default.rp_filter)`
echo "Tcp_Syncookies"=`(sysctl -n net.ipv4.tcp_syncookies)`

#piece##%SEC-CI-HT-622#%SEC-CI-HT-620#%SEC-CI-HT-653#%SEC-CI-HT-646#%SEC-CI-HT-661#%SEC-CI-HT-659#%SEC-CI-HT-618#%

#piece##%SEC-CI-HT-605#%SEC-CI-HT-655#%
#!/bin/bash
NUMBER=0
SNMPD_STATUS=`ps -ef | grep snmpd | grep -v grep | wc -l`;
function Check_SNMPD
{
if [ -f /etc/snmp/snmpd.conf ];
then  SNMPD_CONF=/etc/snmp/snmpd.conf;
else  SNMPD_CONF=/etc/snmpd.conf;
fi;
if [ `grep -v "^#" $SNMPD_CONF|egrep "public|private"|wc -l` -eq 0 ];
then  echo "SNMPD is running.SNMP check result:true";
else  echo "SNMPD is running.SNMP check result:false";
fi;
for NUMBER in `grep -v "^#" $SNMPD_CONF| grep "group"|awk -F" " '{print $3}' | cut -c 2`;
   do echo "The SNMPD Version is:$NUMBER"
   done
}
if [ "$SNMPD_STATUS" -ge 1 ];
then  Check_SNMPD;
else echo "SNMPD is not running.SNMP check result:true";
fi;
unset SNMPD_STATUS SNMPD_CONF;

#piece##%SEC-CI-HT-605#%SEC-CI-HT-655#%

#piece##%SEC-CI-HT-635#%
cat /etc/inittab|grep -v "^#"|grep "ctrlaltdel"
#piece##%SEC-CI-HT-635#%

#piece##%SEC-CI-HT-603#%
ulimit -n
ulimit -s
#piece##%SEC-CI-HT-603#%

#piece##%SEC-CI-HT-642#%
#!/bin/bash
function chk_timesync {
ntpstatus=`ps -ef|grep ntpd|grep -v grep|wc -l`
chronystatus=`ps -ef|grep chronyd|grep -v grep|wc -l`
timesyncdstatus=`ps -ef|grep timesyncd|grep -v grep|wc -l`
if [ $ntpstatus != 0 ];
    then config_file=$(ps -ef|grep ntpd|grep -v grep| awk 'match($0,/-c *([^ ]+)/,a){print a[1]}')
    cat ${config_file:-"/etc/ntp.conf"}|egrep "^server|^pool"|grep -v "127.127.1.0";
      ntpserverno=`cat ${config_file:-"/etc/ntp.conf"}|egrep "^server|^pool"|grep -v "127.127.1.0"|wc -l`;
      echo "ntp is running, ntpserverno="$ntpserverno
fi
if [ $chronystatus != 0 ];
    then cat /etc/chrony.conf|egrep "^server|^pool"|grep -v "127.127.1.0";
      ntpserverno=`cat /etc/chrony.conf|egrep "^server|^pool"|grep -v "127.127.1.0"|wc -l`;
      echo "chrony is running, ntpserverno="$ntpserverno
fi
if [ $timesyncdstatus != 0 ];
    then cat /etc/systemd/timesyncd.conf|egrep "^NTP|^FallbackNTP"|grep -v "127.127.1.0";
      ntpserverno=`cat /etc/systemd/timesyncd.conf|egrep "^NTP|^FallbackNTP"|grep -v "127.127.1.0"|wc -l`;echo "timesyncd is running, ntpserverno="$ntpserverno
fi
[ $ntpstatus -eq 0 -a $chronystatus -eq 0 -a $timesyncdstatus -eq 0 ] && echo "time synchronized server is not running，please configure and start it."
[ ${ntpserverno:=0} -eq 0 ] && echo "crontab ntpserverno="`crontab -l 2>/dev/null |grep ntpupdate|grep -v "127.127.1.0"|wc -l`
}
chk_timesync;unset ntpstatus config_file chronystatus timesyncdstatus ntpserverno chk_timesync
#piece##%SEC-CI-HT-642#%

#piece##%SEC-CI-HT-608#%
#!/bin/bash
AUTOFS_STATUS=`systemctl list-units |grep autofs | wc -l`
if [ x"$AUTOFS_STATUS" != "x0" ];then
     echo "The AutoFS is enable,check result:false";
else echo "The AutoFS is disable,check result:true";
fi;

#piece##%SEC-CI-HT-608#%

#piece##%SEC-CI-HT-619#%
echo "idle_activation_enabled="`gconftool-2 -g /apps/gnome-screensaver/idle_activation_enabled`
echo "lock_enabled="`gconftool-2 -g /apps/gnome-screensaver/lock_enabled`
echo "mode="`gconftool-2 -g /apps/gnome-screensaver/mode`
echo "idle_delay="`gconftool-2 -g /apps/gnome-screensaver/idle_delay`
#piece##%SEC-CI-HT-619#%

#piece##%SEC-CI-HT-610#%
ls -l /etc/default/* /etc/init.d/* /etc/rc*.d/* /etc/cron*|grep "\\-rwxrwxrwx"
echo "result="`ls -l /etc/default/* /etc/init.d/* /etc/rc*.d/* /etc/cron*|grep "\\-rwxrwxrwx"|wc -l`
#piece##%SEC-CI-HT-610#%

#piece##%SEC-CI-HT-631#%
awk -F: '( $2 == "" ) { print $1 }' /etc/shadow
echo "result="`awk -F: '( $2 == "" ) { print $1 }' /etc/shadow |wc -l`
#piece##%SEC-CI-HT-631#%

#piece##%SEC-CI-HT-644#%
cat /etc/pam.d/su | grep -v "^#" | grep -v "^$"
#piece##%SEC-CI-HT-644#%

#piece##%SEC-CI-HT-645#%
sshd -T|grep -i Protocol|awk '{if($2=="2"){print $0 "check result:true"}else{print $0 "check result:false"}}END{if(NR==0){print "check result:true"}}'
#piece##%SEC-CI-HT-645#%

#piece##%SEC-CI-HT-626#%
#!/bin/bash
function Check_SYSLOGD
{
if [[ `ps -ef|grep -i 'rsyslog'|grep -v grep|wc -l` != 0 ]];then
        if [ -f /etc/rsyslog.d/rsyslog.conf ];then
                SYSLOGCONF=/etc/rsyslog.d/rsyslog.conf;
        elif [ -f /etc/rsyslog.conf ];then
                SYSLOGCONF=/etc/rsyslog.conf;
        elif [ -f /etc/rsyslog.d/s_auth.conf ];then
                SYSLOGCONF=/etc/rsyslog.d/s_auth.conf;
        else    echo "/etc/rsyslog.conf or /etc/syslog.conf is not exist,scripts exit now";
        return 0
        fi
fi;
cat $SYSLOGCONF|sed '/^#/d'|sed '/^$/d'
}
function Check_SYSLOGNG
{
SYSLOGCONF=/etc/syslog-ng/syslog-ng.conf;
for FILTER in `cat $SYSLOGCONF |grep ^log|grep filter|cut -d\; -f2|cut -d\( -f2|cut -d\) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep ^filter $FILTER;
done
for DESTINATION in `cat $SYSLOGCONF |grep ^log|awk -F\; '{print $1\n$2\n$3}'|grep destination|cut -d\( -f2|cut -d\) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep ^destination $DESTINATION ;
done
cat $SYSLOGCONF |grep ^log
}
if [[ `ps -ef|egrep '(rsyslogd|syslog-ng)'|grep -v grep|wc -l` != 0 ]];then
     if [[ `ps -ef|grep -i 'syslog-ng'|grep -v grep|wc -l` != 0 ]];then
          Check_SYSLOGNG;
     else Check_SYSLOGD;
     fi;
else echo syslog is not running;
fi
#piece##%SEC-CI-HT-626#%

#piece##%SEC-CI-HT-647#%
cat /etc/login.defs | grep -v "^#" | grep -v "^$"
#piece##%SEC-CI-HT-647#%

#piece##%SEC-CI-HT-648#%
cat /etc/logrotate.d/syslog | egrep "rotate|size"
#piece##%SEC-CI-HT-648#%

#piece##%SEC-CI-HT-615#%
cat /etc/logrotate.d/syslog 2>/dev/null | egrep "rotate|size"
cat /etc/logrotate.d/rsyslog 2>/dev/null | egrep "rotate|size"
#piece##%SEC-CI-HT-615#%

#piece##%SEC-CI-HT-649#%
#!/bin/bash
if ([ -f /etc/euleros-release ] && [ -f /etc/pam.d/password-auth ]);
then FILE=/etc/pam.d/password-auth
     echo "====/etc/pam.d/password-auth is:===="
     cat $FILE |sed '/^#/d'|sed '/^$/d';
else echo "check result:false";
fi

#piece##%SEC-CI-HT-649#%

#piece##%SEC-CI-HT-650#%
LANG=C
rpm -qa | egrep -E "\btcpdump\b|\bgdb\b|\bstrace\b|\bdexdump\b|\bcpp\b|\bgcc\b|\bwireshark\b|\bethereal\b"
echo "result="`rpm -qa | egrep -E "\btcpdump\b|\bgdb\b|\bstrace\b|\bdexdump\b|\bcpp\b|\bgcc\b|\bwireshark\b|\bethereal\b" | wc -l`
#piece##%SEC-CI-HT-650#%

#piece##%SEC-CI-HT-651#%
#!/bin/bash
 function Check_SYSLOGD
{
if [[ `ps -ef|grep -i 'rsyslog'|grep -v "grep"|wc -l` != 0 ]];then
    if [ -f /etc/rsyslog.conf ];then
        SYSLOGCONF=/etc/rsyslog.conf;
    elif [ -f /etc/syslog.conf ];then
        SYSLOGCONF=/etc/syslog.conf;
    else    echo "/etc/rsyslog.conf or /etc/syslog.conf is not exist,scripts exit now";
        return 0
    fi;
fi
cat $SYSLOGCONF |sed '/^#/d'|sed '/^$/d'|awk '($2!~/*/) && ($2!~/-/) {print $1" "$2" "$3" "$4}'
}
 function Check_SYSLOGNG
{
SYSLOGCONF=/etc/syslog-ng/syslog-ng.conf;
for FILTER in `cat $SYSLOGCONF |grep "^log"|grep filter|cut -d; -f2|cut -d( -f2|cut -d) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep "^filter $FILTER"
done
for DESTINATION in `cat $SYSLOGCONF |grep "^log"|awk -F; '{print $1" "$2" "$3}'|grep destination|cut -d( -f2|cut -d) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep "^destination $DESTINATION "
done
cat $SYSLOGCONF |grep "^log"
}
 if [[ `ps -ef|egrep '(syslogd|syslog-ng)'|grep -v "grep"|wc -l` != 0 ]];then
      if [[ `ps -ef|grep -i 'syslogd'|grep -v "grep"|wc -l` != 0 ]];then
           Check_SYSLOGD;
      else Check_SYSLOGNG;
      fi;
else echo "syslog is not running";
fi
#piece##%SEC-CI-HT-651#%

#piece##%SEC-CI-HT-621#%
#!/bin/bash
 function Check_SYSLOGD
{
if [[ `ps -ef|grep -i 'rsyslog'|grep -v "grep"|wc -l` != 0 ]];then
    if [ -f /etc/rsyslog.conf ];then
        SYSLOGCONF=/etc/rsyslog.conf;
    elif [ -f /etc/syslog.conf ];then
        SYSLOGCONF=/etc/syslog.conf;
    else    echo "/etc/rsyslog.conf or /etc/syslog.conf is not exist,scripts exit now";
        return 0
    fi;
fi
cat $SYSLOGCONF |sed '/^#/d'|sed '/^$/d'|awk '($2!~/*/) && ($2!~/-/) {print $1" "$2" "$3" "$4}'
}
 function Check_SYSLOGNG
{
SYSLOGCONF=/etc/syslog-ng/syslog-ng.conf;
for FILTER in `cat $SYSLOGCONF |grep "^log"|grep filter|cut -d; -f2|cut -d( -f2|cut -d) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep "^filter $FILTER"
done
for DESTINATION in `cat $SYSLOGCONF |grep "^log"|awk -F; '{print $1" "$2" "$3}'|grep destination|cut -d( -f2|cut -d) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep "^destination $DESTINATION "
done
cat $SYSLOGCONF |grep "^log"
}
 if [[ `ps -ef|egrep '(syslogd|syslog-ng)'|grep -v "grep"|wc -l` != 0 ]];then
      if [[ `ps -ef|grep -i 'syslogd'|grep -v "grep"|wc -l` != 0 ]];then
           Check_SYSLOGD;
      else Check_SYSLOGNG;
      fi;
else echo "syslog is not running";
fi
#piece##%SEC-CI-HT-621#%

#piece##%SEC-CI-HT-652#%
find /usr/bin/chage /usr/bin/gpasswd /usr/bin/wall /usr/bin/chfn /usr/bin/chsh /usr/bin/newgrp /usr/bin/write /usr/sbin/usernetctl /usr/sbin/traceroute /bin/mount /bin/umount /bin/ping /sbin/netreport -type f -perm -6000 2>/dev/null
#piece##%SEC-CI-HT-652#%

#piece##%SEC-CI-HT-654#%
cat /etc/ssh/sshd_config |grep '^MaxStartups'
#piece##%SEC-CI-HT-654#%

#piece##%SEC-CI-HT-643#%
cat /etc/ssh/sshd_config | grep -v "^$" |grep AllowAgentForwarding;
#piece##%SEC-CI-HT-643#%

#piece##%SEC-CI-HT-656#%
more /etc/ssh/sshd_config |grep Ciphers |grep -v "#"
more /etc/ssh/sshd_config |grep KexAlgorithms |grep -v "#"
more /etc/ssh/sshd_config |grep MACs |grep -v "#"
#piece##%SEC-CI-HT-656#%

#piece##%SEC-CI-HT-658#%
cat /etc/ssh/sshd_config |grep 'GatewayPorts'
#piece##%SEC-CI-HT-658#%

#piece##%SEC-CI-HT-660#%
#!/bin/bash
if [ ! `echo $PATH | grep -E "\:\."` ];then
      echo "check result is:true";
else  echo "check result is:false";
fi;

#piece##%SEC-CI-HT-660#%

#piece##%SEC-CI-HT-612#%
#!/bin/bash
FTPSTATUS=`netstat -antp|grep -i "listen"|grep ":21\>"|wc -l`;
USERNO=`cat /etc/passwd|cut -d: -f1|egrep "^root$|^daemon$|^bin$|^sys$|^adm$|^lp$|^uucp$|^nuucp$|^listen$|^nobody$|^noaccess$|^nobody4$"|wc -l`;
USERNO1=0;
USERNO2=0;
function Check_vsftpconf
{
  if [ -f /etc/vsftpd.conf ];
  then
    FTPCONF="/etc/vsftpd.conf";
  elif [ -f /etc/vsftpd/vsftpd.conf ];
  then
    FTPCONF="/etc/vsftpd/vsftpd.conf";
  else
    echo "/etc/vsftpd.conf or /etc/vsftpd/vsftpd.conf is not exist,scripts exit now";
    return 0;
  fi;
  echo "-------$FTPCONF--------";
  cat $FTPCONF|grep -v "^#";
  FTPUSER=`cat $FTPCONF|grep -v "^#"|grep userlist_file|cut -d= -f2`;
  echo "-------$FTPUSER--------";
  cat ${FTPUSER:="/etc/vsftpd.user_list"} |grep -v "^#"|grep -v "^$";
  userlist_enable=`grep -v "^#" $FTPCONF|grep -i "userlist_enable=YES"|wc -l`;
  userlist_deny=`grep -v "^#" $FTPCONF|grep -i "userlist_deny=NO"|wc -l`;
  if [ $userlist_enable = 1 -a $userlist_deny = 1 ] && [ "$FTPUSER" != "" ];
  then
  {
 for  USER in `cat /etc/passwd|cut -d: -f1|egrep "^root$|^daemon$|^bin$|^sys$|^adm$|^lp$|^uucp$|^nuucp$|^listen$|^nobody$|^noaccess$|^nobody4$"`;
        do
    TEMP=`cat $FTPUSER|grep -v "^#"|grep -w $USER|wc -l`;
    USERNO2=`expr $TEMP + $USERNO2`;
    if [ $TEMP != 0 ];
      then echo "$USER in $FTPUSER , allowed to ftp ";
    fi
 done
       if [ $USERNO2 = 0 ];
          then  echo "FTP is running.FTP user config $ftpusers_pam is not recommended.FTP user config "$FTPUSER" is recommended.FTP check result:true.";
          else  echo "FTP is running.FTP user config $ftpusers_pam is not recommended.FTP user config "$FTPUSER" is not recommended.FTP check result:false.";
       fi;
   }
    else  echo "FTP is running.FTP user config $ftpusers_pam is not recommended.FTP user config "$FTPCONF" is not recommended.FTP check result:false.";
fi
}
function Check_ftpusers1
{
  echo "-----------/etc/passwd----------";
  cat /etc/passwd|cut -d: -f1|egrep "^root$|^daemon$|^bin$|^sys$|^adm$|^lp$|^uucp$|^nuucp$|^listen$|^nobody$|^noaccess$|^nobody4$";
  if [ -f /etc/pam.d/vsftpd ]
  then
    ftpusers_pam=`grep file /etc/pam.d/vsftpd|egrep -v "^#"|sed 's/^.*file=//g'|awk '{print $1}'`;
    if [ a${ftpusers_pam} != a ]
    then
    {
       echo "---------$ftpusers_pam---------";
       cat $ftpusers_pam|grep -v "^#"|grep -v "^$";
       for  USER in `cat /etc/passwd|cut -d: -f1|egrep "^root$|^daemon$|^bin$|^sys$|^adm$|^lp$|^uucp$|^nuucp$|^listen$|^nobody$|^noaccess$|^nobody4$"`;
       do
   TEMP=`cat $ftpusers_pam|grep -v "^#"|grep -w $USER|wc -l`;
   USERNO1=`expr $TEMP + $USERNO1`;
   if [ $TEMP = 0 ];
    then echo "$USER not in $ftpusers_pam , allowed to ftp ";
   fi
       done
       if [ $USERNO = $USERNO1 ];
       then
         echo "FTP is running.FTP user config $ftpusers_pam is recommended.FTP check result:true.";
       else Check_vsftpconf;
       fi
     }
    else
      echo "/etc/pam.d/vsftpd is not configure account. scripts exit now";
    fi
  else
    echo "/etc/pam.d/vsftpd is not exist,scripts exit now,FTP check result:true";
  fi
}
if [ $FTPSTATUS = 0 ];
    then  echo "FTP is not running.FTP check result:true.";
    else  Check_ftpusers1;
fi
unset FTPSTATUS USERNO USERNO1 USERNO2;

#piece##%SEC-CI-HT-612#%

#piece##%SEC-CI-HT-609#%
#!/bin/bash
function vsftp_banner {
rpm -q vsftpd|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q vsftpd|grep -v 'is not installed\|未安装软件包'|wc -l)
FTPCONF="$(ps -ef |awk '/vsftpd \//{print $NF}')";
if [[ ! -f ${FTPCONF:="/etc/vsftpd/vsftpd.conf"} ]];
    then FTPCONF="/etc/vsftpd.conf";   
fi
if [[ $is_installed -eq 0 ]]; then
  echo "vsftpd server is not installed, result=true"
elif [[ -f $FTPCONF ]]; then
  if [[ $(grep '^ftpd_banner' $FTPCONF|wc -l) -ne 0 ]]; then
    grep '^ftpd_banner' $FTPCONF |awk -F= 'END{if($2!=""){print $0" ,result=true"}else{print $0" ,result=false"}}'
  elif [ $(grep '^banner_file' $FTPCONF|wc -l) -ne 0 ]; then
    banner_file=$(grep '^banner_file' $FTPCONF|awk -F= 'END{if($2!=""){print $2}}')
    if [[ -s $banner_file ]];then
      echo "banner_file "$banner_file" ,result=true"
    else
      echo "banner_file is empty, result=false"
    fi
  else
    echo "Do not config ftpd_banner or banner_file, result=false"
  fi
else
  echo "vsftpd server is installed, but vsftpd.conf is not exist, result=false"
fi
}

function pureftp_banner {
rpm -q 'pure-ftpd'|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q 'pure-ftpd'|grep -v 'is not installed\|未安装软件包'|wc -l)
if [[ $is_installed -eq 0 ]]; then
  echo "pure-ftpd server is not installed, result=true"
elif [[ -f /etc/pure-ftpd/pure-ftpd.conf ]]; then
  banner_file=$(grep '^FortunesFile' /etc/pure-ftpd/pure-ftpd.conf |awk '{if($2!=""){print $2}}')
  if [[ -s $banner_file ]];then
    echo "FortunesFile "$banner_file" ,result=true"
  else
    echo "Do not config FortunesFile, result=false"
  fi
else
  echo "pure-ftpd server is installed, but pure-ftpd.conf is not exist, result=false"
fi
}

function proftp_banner {
rpm -q 'proftpd'|grep -v 'is not installed\|未安装软件包'
is_installed=$(rpm -q 'proftpd'|grep -v 'is not installed\|未安装软件包'|wc -l)

FTPCONF="$(ps -ef |awk '/vsftpd \//{print $NF}')";
if [ ! -f ${FTPCONF:="/etc/vsftpd/vsftpd.conf"} ];
    then FTPCONF="/etc/vsftpd.conf";   
fi

if [[ $is_installed -eq 0 ]]; then
  echo "proftpd server is not installed, result=true"
elif [[ -f /etc/proftpd/proftpd.conf ]]; then
  egrep '^\s*ServerIdent' /etc/proftpd/proftpd.conf|head -n 1
  banner=$(egrep '^\s*ServerIdent' /etc/proftpd/proftpd.conf |head -n 1|awk '/^\s*ServerIdent\s+(on\s+[\d\w"]+|off\s*\S*)/{print $0}'|wc -l)
  if [[ $banner -ne 0 ]];then echo "result=true"; else echo "result=false"; fi
else
  echo "proftpd server is installed, but proftpd.conf is not exist, result=false"
fi
}
vsftp_banner;pureftp_banner;proftp_banner;unset vsftp_banner pureftp_banner proftp_banner
#piece##%SEC-CI-HT-609#%

#piece##%SEC-CI-HT-601#%
#!/bin/bash
function Calculate
{
  CREDIT=`cat $FILE|egrep -v "^#|^$"|grep -m 1 -w "credit"|sed 's/^.*credit=//g'|sed 's/\s.*$//g'`
  DCREDIT=`cat $FILE|egrep -v "^#|^$"|grep -m 1 -w "dcredit"|sed 's/^.*dcredit=//g'|sed 's/\s.*$//g'`
  LCREDIT=`cat $FILE|egrep -v "^#|^$"|grep -m 1 -w "lcredit"|sed 's/^.*lcredit=//g'|sed 's/\s.*$//g'`
  UCREDIT=`cat $FILE|egrep -v "^#|^$"|grep -m 1 -w "ucredit"|sed 's/^.*ucredit=//g'|sed 's/\s.*$//g'`
  OCREDIT=`cat $FILE|egrep -v "^#|^$"|grep -m 1 -w "ocredit"|sed 's/^.*ocredit=//g'|sed 's/\s.*$//g'`
  MINCLASS=`cat $FILE|egrep -v "^#|^$"|grep -m 1 -w "minclass"|sed 's/^.*minclass=//g'|sed 's/\s.*$//g'`
  MINLEN=`cat $FILE|egrep -v "^#|^$"|grep -m 1 "minlen"|sed 's/^.*minlen=//g'|sed 's/\s.*$//g'`
  COUNT1=`cat $FILE|grep -i "min=disabled,12,8,6,5"|grep -i "max=40"| grep -i "passphrase=3"|grep -i "match=4"|grep -i "similar=deny"|grep -i "retry=3"|wc -l`
  COUNT2=0
  for NO in $CREDIT $DCREDIT $LCREDIT $UCREDIT $OCREDIT
  do
     if ([ $NO -lt 0 ]);
     then COUNT2=`expr $COUNT2 + 1`
     fi
  done
  if ([ ${MINCLASS:=0} -ge 2 ] && [ ${MINLEN:=0} -ge 8 ]);
         then echo "check result:true"
   elif ([ $COUNT2 -ge 2 ] && [ ${MINLEN:=0} -ge 8 ]);
          then echo "check result:true"
   elif ([ "$COUNT1" == "1" ]);
          then echo "check result:true"
   else echo "check result:false"
  fi
  unset CREDIT DCREDIT LCREDIT UCREDIT OCREDIT MINCLASS MINLEN COUNT1 COUNT2
}
if ([ -f /etc/euleros-release ] && [ -f /etc/pam.d/password-auth ]);
then FILE=/etc/pam.d/password-auth
     echo "===/etc/pam.d/password-auth is:==="
     cat $FILE | sed '/^#/d' | sed '/^$/d'
     Calculate
elif ([ -f /etc/redhat-release ] && [ -f /etc/pam.d/system-auth ]);
then FILE=/etc/pam.d/system-auth
     echo "====/etc/pam.d/system-auth is:===="
     cat $FILE |sed '/^#/d'|sed '/^$/d'
     Calculate
elif ([ -f /etc/klinux-release ] && [ -f /etc/pam.d/system-auth ]);
then FILE=/etc/pam.d/system-auth
     echo "====/etc/pam.d/system-auth is:===="
     cat $FILE |sed '/^#/d'|sed '/^$/d'
     Calculate
elif ([ -f /etc/SuSE-release ] && [ -f /etc/pam.d/common-password ] && [ `cat /etc/pam.d/common-password |egrep -i "credit|min|max|passphrase|remember"|wc -l` -gt 0 ]);
then FILE=/etc/pam.d/common-password
     echo "====/etc/pam.d/common-password is:===="
     cat $FILE|grep -v '^#'|grep -v '^$'
     Calculate
elif ([ -f /etc/SuSE-release ] && [ -f /etc/pam.d/passwd ] && [ `cat /etc/pam.d/passwd |egrep -i "credit|min|max|passphrase|remember"|wc -l` -gt 0 ]);
then FILE=/etc/pam.d/passwd
     echo "====/etc/pam.d/passwd is:===="
     cat $FILE|grep -v '^#'|grep -v '^$'
     Calculate
fi;
if [ -f /etc/pam.d/login ];
then cat /etc/pam.d/login |sed '/^#/d'|sed '/^$/d';
fi;
if [ -f /etc/pam.d/sshd ];
then cat /etc/pam.d/sshd |sed '/^#/d'|sed '/^$/d';
fi;

#piece##%SEC-CI-HT-601#%

#piece##%SEC-CI-HT-624#%
awk -F: '($3 == 0) { print $1 }' /etc/passwd
echo "result="`awk -F: '($3 == 0) { print $1 }' /etc/passwd |wc -l`
#piece##%SEC-CI-HT-624#%

#piece##%SEC-CI-HT-657#%
cat /etc/ssh/sshd_config |grep '^PermitTunnel'
#piece##%SEC-CI-HT-657#%

#piece##%SEC-CI-HT-639#%
#!/bin/bash
 uname -a
 if [ -f /etc/SuSE-release ];then 
     cat /etc/SuSE-release;
elif [ -f /etc/redhat-release ];then 
     cat /etc/redhat-release;
     echo  "redhat patch check result:true";
elif [ -f /etc/klinux-release ];then 
     cat /etc/klinux-release;
elif [ -f /etc/euleros-release ];then
     cat /etc/euleros-release;
fi
#piece##%SEC-CI-HT-639#%

#piece##%SEC-CI-HT-607#%
#!/bin/bash
function Check_SYSLOGD
{
if [[ `ps -ef|grep -i 'rsyslog'|grep -v grep|wc -l` != 0 ]];then
        if [ -f /etc/rsyslog.d/s_auth.conf ];then
                SYSLOGCONF=/etc/rsyslog.d/s_auth.conf;
        elif [ -f /etc/rsyslog.conf ];then
                SYSLOGCONF=/etc/rsyslog.conf;
        elif [ -f /etc/rsyslog.d/rsyslog.conf ];then
                SYSLOGCONF=/etc/rsyslog.d/rsyslog.conf;
        else    echo "/etc/rsyslog.conf or /etc/syslog.conf is not exist,scripts exit now";
        return 0
        fi
fi;
cat $SYSLOGCONF|sed '/^#/d'|sed '/^$/d'
}
function Check_SYSLOGNG
{
SYSLOGCONF=/etc/syslog-ng/syslog-ng.conf;
for FILTER in `cat $SYSLOGCONF |grep ^log|grep filter|cut -d\; -f2|cut -d\( -f2|cut -d\) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep ^filter $FILTER;
done
for DESTINATION in `cat $SYSLOGCONF |grep ^log|awk -F\; '{print $1\n$2\n$3}'|grep destination|cut -d\( -f2|cut -d\) -f1|sort|uniq`;do
    cat $SYSLOGCONF|grep ^destination $DESTINATION ;
done
cat $SYSLOGCONF |grep ^log
}
if [[ `ps -ef|egrep '(rsyslogd|syslog-ng)'|grep -v grep|wc -l` != 0 ]];then
     if [[ `ps -ef|grep -i 'syslog-ng'|grep -v grep|wc -l` != 0 ]];then
          Check_SYSLOGNG;
     else Check_SYSLOGD;
     fi;
else echo syslog is not running;
fi
#piece##%SEC-CI-HT-607#%
